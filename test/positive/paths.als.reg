open util/integer
pred show {}


one sig c1_Person
{ r_c2_age : one c2_age
, r_c3_maritalStatus : one c3_maritalStatus
, r_c18_children : set c18_children
, r_c19_parents : set c19_parents }
{ 2 <= #r_c19_parents and #r_c19_parents <= 2 }
one sig c2_age
{ ref : one Int }
one sig c3_maritalStatus
{ r_c4_neverMarried : lone c4_neverMarried
, r_c5_married : lone c5_married
, r_c17_divorced : lone c17_divorced }
{ let children = (r_c4_neverMarried + r_c5_married + r_c17_divorced) | one children }
lone sig c4_neverMarried
{}
{ one r_c4_neverMarried }
lone sig c5_married
{ r_c9_spouse : one c9_spouse }
{ one r_c5_married
  (c1_Person.@r_c2_age.@ref) >= 18 }
lone sig c9_spouse in c1_Person
{}
{ one r_c9_spouse
  (((c1_Person.@r_c3_maritalStatus).@r_c5_married).@r_c9_spouse) = (((this.~@r_c9_spouse).~@r_c5_married).~@r_c3_maritalStatus) }
lone sig c17_divorced
{}
{ one r_c17_divorced }
sig c18_children in c1_Person
{}
{ one @r_c18_children.this }
sig c19_parents in c1_Person
{}
{ one @r_c19_parents.this }
