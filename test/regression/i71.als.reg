open util/integer
pred show {}


abstract sig c1_Course
{ r_c2_taughtBy : set c2_taughtBy }

sig c2_taughtBy
{ ref : one c4_Teacher
, r_c3_x : lone c3_x }
{ one @r_c2_taughtBy.this }

sig c3_x
{}
{ one @r_c3_x.this }

abstract sig c4_Teacher
{ r_c5_teaches : set c5_teaches }

sig c5_teaches
{ ref : one c1_Course }
{ one @r_c5_teaches.this }

fact { all  c : c1_Course | all  t : c.@r_c2_taughtBy | (some t.@r_c3_x) && (c in (t.(@ref.(@r_c5_teaches.@ref)))) }
fact { 5 <= #c22_course and #c22_course <= 5 }
sig c22_course extends c1_Course
{}

fact { 3 <= #c23_teacher and #c23_teacher <= 3 }
sig c23_teacher extends c4_Teacher
{}

