5c5,7
< module ErrM where
---
> module Language.Clafer.Front.ErrM where
> 
> import Language.Clafer.Front.Absclafer
11,12c13,14
< data Err a = Ok a | Bad String
<   deriving (Read, Show, Eq, Ord)
---
> data Err a = Ok a | Bad Pos String
>   deriving (Show, Eq, Ord)
16c18
<   fail        = Bad
---
>   fail        = Bad noPos
18c20
<   Bad s >>= f = Bad s
---
>   Bad p s >>= f = Bad p s
24,25c26,27
<   mzero = Bad "Err.mzero"
<   mplus (Bad _) y = y
---
>   mzero = Bad noPos "Err.mzero"
>   mplus (Bad _ _) y = y
