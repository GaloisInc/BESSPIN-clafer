100c100
< Declaration : 'enum' PosIdent '=' ListEnumId { EnumDecl $2 $4 } 
---
> Declaration : 'enum' PosIdent '=' ListEnumId { uncurry PosEnumDecl (gp $1) $2 $4 } 
109c109
< Constraint : '[' ListExp ']' { Constraint (reverse $2) } 
---
> Constraint : '[' ListExp ']' { uncurry PosConstraint (gp $1) (reverse $2) } 
113c113
< SoftConstraint : '(' ListExp ')' { SoftConstraint (reverse $2) } 
---
> SoftConstraint : '(' ListExp ')' { uncurry PosSoftConstraint (gp $1) (reverse $2) } 
117c117
< Goal : '<<' ListExp '>>' { Goal (reverse $2) } 
---
> Goal : '<<' ListExp '>>' { uncurry PosGoal (gp $1) (reverse $2) } 
122c122
<   | 'abstract' { Abstract }
---
>   | 'abstract' { uncurry PosAbstract (gp $1) }
127c127
<   | '{' ListElement '}' { ElementsList (reverse $2) }
---
>   | '{' ListElement '}' { uncurry PosElementsList (gp $1) (reverse $2) }
144,146c144,146
< SuperHow : ':' { SuperColon } 
<   | '->' { SuperArrow }
<   | '->>' { SuperMArrow }
---
> SuperHow : ':' { uncurry PosSuperColon (gp $1) } 
>   | '->' { uncurry PosSuperArrow (gp $1) }
>   | '->>' { uncurry PosSuperMArrow (gp $1) }
155,156c155,156
< InitHow : '=' { InitHow_1 } 
<   | ':=' { InitHow_2 }
---
> InitHow : '=' { uncurry PosInitHow_1 (gp $1) } 
>   | ':=' { uncurry PosInitHow_2 (gp $1) }
161,164c161,164
<   | 'xor' { GCardXor }
<   | 'or' { GCardOr }
<   | 'mux' { GCardMux }
<   | 'opt' { GCardOpt }
---
>   | 'xor' { uncurry PosGCardXor (gp $1) }
>   | 'or' { uncurry PosGCardOr (gp $1) }
>   | 'mux' { uncurry PosGCardMux (gp $1) }
>   | 'opt' { uncurry PosGCardOpt (gp $1) }
170,172c170,172
<   | '?' { CardLone }
<   | '+' { CardSome }
<   | '*' { CardAny }
---
>   | '?' { uncurry PosCardLone (gp $1) }
>   | '+' { uncurry PosCardSome (gp $1) }
>   | '*' { uncurry PosCardAny (gp $1) }
182c182
< ExInteger : '*' { ExIntegerAst } 
---
> ExInteger : '*' { uncurry PosExIntegerAst (gp $1) } 
191,192c191,192
< Exp : 'all' 'disj' Decl '|' Exp { DeclAllDisj $3 $5 } 
<   | 'all' Decl '|' Exp { DeclAll $2 $4 }
---
> Exp : 'all' 'disj' Decl '|' Exp { uncurry PosDeclAllDisj (gp $1) $3 $5 } 
>   | 'all' Decl '|' Exp { uncurry PosDeclAll (gp $1) $2 $4 }
199,200c199,200
< Exp1 : 'max' Exp2 { EGMax $2 } 
<   | 'min' Exp2 { EGMin $2 }
---
> Exp1 : 'max' Exp2 { uncurry PosEGMax (gp $1) $2 } 
>   | 'min' Exp2 { uncurry PosEGMin (gp $1) $2 }
260,261c260,261
< Exp11 : '#' Exp12 { ECSetExp $2 } 
<   | '-' Exp12 { EMinExp $2 }
---
> Exp11 : '#' Exp12 { uncurry PosECSetExp (gp $1) $2 } 
>   | '-' Exp12 { uncurry PosEMinExp (gp $1) $2 }
266c266
< Exp12 : 'if' Exp12 'then' Exp12 'else' Exp13 { EImpliesElse $2 $4 $6 } 
---
> Exp12 : 'if' Exp12 'then' Exp12 'else' Exp13 { uncurry PosEImpliesElse (gp $1) $2 $4 $6 } 
319,322c319,322
< Quant : 'no' { QuantNo } 
<   | 'lone' { QuantLone }
<   | 'one' { QuantOne }
<   | 'some' { QuantSome }
---
> Quant : 'no' { uncurry PosQuantNo (gp $1) } 
>   | 'lone' { uncurry PosQuantLone (gp $1) }
>   | 'one' { uncurry PosQuantOne (gp $1) }
>   | 'some' { uncurry PosQuantSome (gp $1) }
384a385,386
> 
> gp (PT (Pn l c _) _) = (toInteger l, toInteger c)
